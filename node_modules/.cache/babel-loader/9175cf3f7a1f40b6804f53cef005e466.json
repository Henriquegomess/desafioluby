{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/henrique/Desenvolvimento/desafioluby/src/components/RandomCalendar/index.tsx\";\nimport React from 'react';\nimport Heatmap from 'react-calendar-heatmap';\nimport { subYears, isBefore, isSameDay, addDays } from 'date-fns';\nimport { Container } from './styles';\n\nconst RandomCalendar = () => {\n  const startDate = subYears(new Date(), 1);\n  const endDate = new Date();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Heatmap, {\n        startDate: startDate,\n        endDate: endDate,\n        values: generateHeatmapValues(startDate, endDate),\n        gutterSize: 3.5,\n        classForValue: item => {\n          let clampedCount = 0;\n\n          if (item !== null) {\n            clampedCount = Math.max(item.count, 0);\n            clampedCount = Math.min(item.count, 4);\n          }\n\n          return `scale-${clampedCount}`;\n        },\n        showWeekdayLabels: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Calend\\xE1rio Rand\\xF4mico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RandomCalendar;\n\nconst generateHeatmapValues = (startDate, endDate) => {\n  const values = [];\n  let currentDate = startDate;\n\n  while (isBefore(currentDate, endDate) || isSameDay(currentDate, endDate)) {\n    const count = Math.random() * 4;\n    values.push({\n      date: currentDate,\n      count: Math.round(count)\n    });\n    currentDate = addDays(currentDate, 1);\n  }\n\n  return values;\n};\n\nexport default RandomCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomCalendar\");","map":{"version":3,"sources":["/home/henrique/Desenvolvimento/desafioluby/src/components/RandomCalendar/index.tsx"],"names":["React","Heatmap","subYears","isBefore","isSameDay","addDays","Container","RandomCalendar","startDate","Date","endDate","generateHeatmapValues","item","clampedCount","Math","max","count","min","values","currentDate","random","push","date","round"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAuD,UAAvD;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAIA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAMC,SAAS,GAAGN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,EAAa,CAAb,CAA1B;AACA,QAAMC,OAAO,GAAG,IAAID,IAAJ,EAAhB;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,MAAM,EAAEC,qBAAqB,CAACH,SAAD,EAAYE,OAAZ,CAH/B;AAIE,QAAA,UAAU,EAAE,GAJd;AAKE,QAAA,aAAa,EAAGE,IAAD,IAAwB;AACrC,cAAIC,YAAY,GAAG,CAAnB;;AAEA,cAAID,IAAI,KAAK,IAAb,EAAmB;AACjBC,YAAAA,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASH,IAAI,CAACI,KAAd,EAAqB,CAArB,CAAf;AACAH,YAAAA,YAAY,GAAGC,IAAI,CAACG,GAAL,CAASL,IAAI,CAACI,KAAd,EAAqB,CAArB,CAAf;AACD;;AAED,iBAAQ,SAAQH,YAAa,EAA7B;AACD,SAdH;AAeE,QAAA,iBAAiB;AAfnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7BD;;KAAMN,c;;AA+BN,MAAMI,qBAAqB,GAAG,CAACH,SAAD,EAAkBE,OAAlB,KAAoC;AAChE,QAAMQ,MAAsB,GAAG,EAA/B;AAEA,MAAIC,WAAW,GAAGX,SAAlB;;AACA,SAAOL,QAAQ,CAACgB,WAAD,EAAcT,OAAd,CAAR,IAAkCN,SAAS,CAACe,WAAD,EAAcT,OAAd,CAAlD,EAA0E;AACxE,UAAMM,KAAK,GAAGF,IAAI,CAACM,MAAL,KAAgB,CAA9B;AAEAF,IAAAA,MAAM,CAACG,IAAP,CAAY;AAAEC,MAAAA,IAAI,EAAEH,WAAR;AAAqBH,MAAAA,KAAK,EAAEF,IAAI,CAACS,KAAL,CAAWP,KAAX;AAA5B,KAAZ;AAEAG,IAAAA,WAAW,GAAGd,OAAO,CAACc,WAAD,EAAc,CAAd,CAArB;AACD;;AAED,SAAOD,MAAP;AACD,CAbD;;AAeA,eAAeX,cAAf","sourcesContent":["import React from 'react';\nimport Heatmap from 'react-calendar-heatmap';\nimport { subYears, isBefore, isSameDay, addDays } from 'date-fns';\n\nimport { Container } from './styles';\n\ntype HeatmapValue = { date: Date; count: number };\n\nconst RandomCalendar: React.FC = () => {\n  const startDate = subYears(new Date(), 1);\n  const endDate = new Date();\n\n  return (\n    <Container>\n      <div className=\"wrapper\">\n        <Heatmap\n          startDate={startDate}\n          endDate={endDate}\n          values={generateHeatmapValues(startDate, endDate)}\n          gutterSize={3.5}\n          classForValue={(item: HeatmapValue) => {\n            let clampedCount = 0;\n\n            if (item !== null) {\n              clampedCount = Math.max(item.count, 0);\n              clampedCount = Math.min(item.count, 4);\n            }\n\n            return `scale-${clampedCount}`;\n          }}\n          showWeekdayLabels\n        />\n      </div>\n\n      <span>Calendário Randômico</span>\n    </Container>\n  );\n};\n\nconst generateHeatmapValues = (startDate: Date, endDate: Date) => {\n  const values: HeatmapValue[] = [];\n\n  let currentDate = startDate;\n  while (isBefore(currentDate, endDate) || isSameDay(currentDate, endDate)) {\n    const count = Math.random() * 4;\n\n    values.push({ date: currentDate, count: Math.round(count) });\n\n    currentDate = addDays(currentDate, 1);\n  }\n\n  return values;\n};\n\nexport default RandomCalendar;"]},"metadata":{},"sourceType":"module"}