{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/henrique/Desenvolvimento/desafioluby/src/pages/Repo/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Container, Breadcrumb, RepoIcon, Stats, StarIcon, ForkIcon, LinkButton, GithubIcon } from './styles';\n\nconst Repo = () => {\n  _s();\n\n  const {\n    username,\n    reponame\n  } = useParams();\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/${username}/${reponame}`).then(async response => {\n      setData(response.status === 404 ? {\n        error: 'Repository not found!'\n      } : {\n        repo: await response.json()\n      });\n    });\n  }, [reponame, username]);\n\n  if (data === null || data === void 0 ? void 0 : data.error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.repo)) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(RepoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: 'username',\n        to: `/${username}`,\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: 'reponame',\n        to: `/${username}/${reponame}`,\n        children: reponame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.repo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.repo.stargazers_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"stars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(ForkIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.repo.forks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"forks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n      href: data.repo.html_url,\n      children: [/*#__PURE__*/_jsxDEV(GithubIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"View on GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Repo, \"qC2qVSGN3XNNPosmv8S2xK8TQAw=\", false, function () {\n  return [useParams];\n});\n\n_c = Repo;\nexport default Repo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repo\");","map":{"version":3,"sources":["/home/henrique/Desenvolvimento/desafioluby/src/pages/Repo/index.tsx"],"names":["React","useState","useEffect","Link","useParams","Container","Breadcrumb","RepoIcon","Stats","StarIcon","ForkIcon","LinkButton","GithubIcon","Repo","username","reponame","data","setData","fetch","then","response","status","error","repo","json","description","stargazers_count","forks","html_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport {\n  Container,\n  Breadcrumb,\n  RepoIcon,\n  Stats,\n  StarIcon,\n  ForkIcon,\n  LinkButton,\n  GithubIcon,\n} from './styles';\n\nimport { APIRepo } from '../../@types';\n\ninterface Data {\n  repo?: APIRepo;\n  error?: string;\n}\n\nconst Repo: React.FC = () => {\n  const { username, reponame } = useParams();\n  const [data, setData] = useState<Data>();\n\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/${username}/${reponame}`).then(\n      async (response) => {\n        setData(\n          response.status === 404\n            ? { error: 'Repository not found!' }\n            : { repo: await response.json() }\n        );\n      }\n    );\n  }, [reponame, username]);\n\n  if (data?.error) {\n    return <h1>{data.error}</h1>;\n  }\n\n  if (!data?.repo) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Container>\n      <Breadcrumb>\n        <RepoIcon />\n\n        <Link className={'username'} to={`/${username}`}>\n          {username}\n        </Link>\n\n        <span>/</span>\n\n        <Link className={'reponame'} to={`/${username}/${reponame}`}>\n          {reponame}\n        </Link>\n      </Breadcrumb>\n\n      <p>{data.repo.description}</p>\n\n      <Stats>\n        <li>\n          <StarIcon />\n          <b>{data.repo.stargazers_count}</b>\n          <span>stars</span>\n        </li>\n        <li>\n          <ForkIcon />\n          <b>{data.repo.forks}</b>\n          <span>forks</span>\n        </li>\n      </Stats>\n\n      <LinkButton href={data.repo.html_url}>\n        <GithubIcon />\n        <span>View on GitHub</span>\n      </LinkButton>\n    </Container>\n  );\n};\n\nexport default Repo;"]},"metadata":{},"sourceType":"module"}